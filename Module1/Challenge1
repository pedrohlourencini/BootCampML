#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
@author: pedro
"""

!pip install pandas
!pip install numpy
!pip install seaborn
!pip install matplotlib

#imports
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

dataset = pd.read_csv('/home/pedro/Aulas/IGTI - ML/MÃ³dulo 1 - Fundamentos/Desafio 1/comp_bikes_mod.csv')

nans = dataset.isna().sum()
nans[nans > 0]

print(len(dataset.dtypes.unique()))

perc = dataset["temp"].isna().sum() / len(dataset)
print(round(perc * 100), "%")

dataset.dropna(subset=["temp"], inplace = True)
dataset.shape

temp_mean = dataset["temp"].mean()

windspeed_std = dataset["windspeed"].std()

season_category = dataset["season"].astype("category")

dteday = pd.to_datetime(dataset["dteday"], format = "%Y/%m/%d")
print(dteday.max())

dataset.boxplot(["windspeed"])

df = dataset[["hum", "cnt"]].corr()

plt.figure(figsize = (5, 5))
sns.heatmap(df, annot=True)
plt.title("Heat Map")
plt.show()

dataset_copy = dataset.copy()

dataset_copy.fillna(dataset[["hum", "cnt", "casual"]].mean(), inplace = True)
print(dataset_copy[["hum", "cnt", "casual"]].isna().sum())

from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score

x_dataset = dataset_copy[["hum", "casual"]].values
y_dataset = dataset_copy["cnt"].values

clf1 = LinearRegression()
clf1_fit = clf1.fit(x_dataset, y_dataset)
previsao_1 = clf1.predict(x_dataset)

print("Y = {} X {}".format(clf1.coef_, clf1.intercept_))

r2_ = r2_score(y_dataset, previsao_1)

print("r2 = ", r2_)

from sklearn.tree import DecisionTreeRegressor

clf = DecisionTreeRegressor()
clf_fit = clf.fit(x_dataset, y_dataset)
previsao = clf.predict(x_dataset)

r2 = r2_score(y_dataset, previsao)

print("r2 - Decision Tree Regressor = ", r2)
